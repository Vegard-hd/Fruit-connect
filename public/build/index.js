$(async function(){$("#startGame").on("click",async function(z){await gsap.to(".buttonWrapper",{scale:1.1,duration:0.1,ease:"elastic.out(2, 0.3)"}).then(()=>{$(".buttonWrapper").remove(),$("#gameContainer").toggleClass("d-none")}).catch((E)=>{console.warn("failed to start game")})});let R=io(),W;R.on("initial-data",async(z)=>{if(W===!0)return;A(z?.topScores),await _(z?.data),W=!0}),R.on("message",async(z)=>{if(z?.gameEnded)console.log(z);else if(z?.topScores)console.log(z),y(z?.topScores);else await Z(z.result),q(z.score)}),R.on("error",(z)=>{console.error("Socket error:",z)});function Y(z){R.emit("message",z)}async function Z(z){return await await new Promise((J,K)=>{JSON.parse(z).map((H)=>{return{row:Math.floor(H.index/10),index:H.index,col:H.index%10,newFruit:H.newFruit}}).forEach(async(H)=>{let N=H.row+1,V=[...$(`#row${N}`).children()].find((X,B)=>B===H.col);await gsap.to(V,{opacity:0,scale:2.5,duration:0.1,ease:"elastic.out(2, 0.3)"}).then(()=>$(V).remove()).then(()=>{$(`#row${N}`).prepend(`<img id="${H.newFruit.id}" src="${H.newFruit.src}" alt="${H.newFruit.fruit}" />`)});var P=gsap.timeline({});let Q=`#${H.newFruit.id}`;P.to(Q,{scale:1.6,duration:0.1}),P.to(Q,{scale:0.8,duration:0.1}),P.to(Q,{scale:1,duration:0.1,ease:"elastic.out(2,0.3)"})}),J("success")})}async function _(z){return await new Promise(async(J,K)=>{try{let L=await JSON.parse(z),U=0,H=1;L.forEach((N,V)=>{let{fruit:P,src:Q,id:X}=N;if(U++,$(`#row${H}`).append(`<img id="${X}" src="${Q}" alt="${P}" />`),U>=10)U=0,H++}),setTimeout(()=>{J()},1000)}catch(L){console.error(L),K(L)}})}function q(z=1){$("#gameScore").text(z)}$(document).on("click",async function(z){try{if(z.target.tagName==="IMG"){let E=await $(z.target)[0].id;if(!E)return;let J=JSON.stringify({fruit:E});Y(J)}}catch(E){console.warn(E)}});function y(z){try{z.forEach((E,J)=>{let K=`#row-${J+1}`;if(parseFloat($(K).find("td").eq(0).text())<E.score)gsap.to(K,{scale:0,duration:0.5,onComplete:()=>{$(K).replaceWith(`
                <tr id="row-${J+1}">
                  <th scope="row">${J+1}</th>
                  <td>${E.score}</td>
                  <td>${E.username}</td>
                </tr>
              `),gsap.fromTo(`#row-${J+1}`,{scale:0},{scale:1,duration:0.5})}})})}catch(E){console.error("Updating scoreboard failed",E)}}function A(z){try{[...z].forEach((E,J)=>{$("#scoreTbody").append(`<tr id="row-${J+1}">
          <th scope="row">${J+1}</th>
          <td>${E.score}</td>
          <td>${E.username}</td>
        </tr>`)})}catch(E){console.error("updating scoreboard failed",E)}}});
