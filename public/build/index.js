$(async function(){let X;$("#startGame").on("click",async function(z){X=$("#gameUsername").val(),Z({username:X}),await gsap.to(".buttonWrapper",{scale:1.1,duration:0.1,ease:"elastic.out(2, 0.3)"}).then(()=>{$(".buttonWrapper").remove(),$("#gameContainer").removeClass("d-none"),$("#gameScoreDisplay").removeClass("d-none"),$("#gameScoreDisplay").removeClass("d-none"),$("#landingPage").addClass("d-none")}).catch((E)=>{console.warn("failed to start game")})});let U=io(),Y;U.on("initial-data",async(z)=>{if(Y===!0)return;F(z?.topScores),await B(z?.data),Y=!0}),U.on("message",async(z)=>{switch(z){case z?.topScores:_(z?.topScores);break;case z?.gameEnded:break;case z?.movesLeft:_(z?.topScores);break;default:await y(z.result),O(z.score);break}}),U.on("error",(z)=>{console.error("Socket error:",z)});function Z(z){U.emit("message",z)}async function y(z){return await await new Promise((J,K)=>{JSON.parse(z).map((H)=>{return{row:Math.floor(H.index/10),index:H.index,col:H.index%10,newFruit:H.newFruit}}).forEach(async(H)=>{let P=H.row+1,W=[...$(`#row${P}`).children()].find((q,G)=>G===H.col);await gsap.to(W,{opacity:0,scale:2.5,duration:0.1,ease:"elastic.out(2, 0.3)"}).then(()=>$(W).remove()).then(()=>{$(`#row${P}`).prepend(`<img id="${H.newFruit.id}" src="${H.newFruit.src}" alt="${H.newFruit.fruit}" />`)});var Q=gsap.timeline({});let R=`#${H.newFruit.id}`;Q.to(R,{scale:1.6,duration:0.1}),Q.to(R,{scale:0.8,duration:0.1}),Q.to(R,{scale:1,duration:0.1,ease:"elastic.out(2,0.3)"})}),J("success")})}async function B(z){return await new Promise(async(J,K)=>{try{let N=await JSON.parse(z),V=0,H=1;N.forEach((P,W)=>{let{fruit:Q,src:R,id:q}=P;if(V++,$(`#row${H}`).append(`<img id="${q}" src="${R}" alt="${Q}" />`),V>=10)V=0,H++}),setTimeout(()=>{J()},1000)}catch(N){console.error(N),K(N)}})}function O(z=1){$("#gameScore").text(z)}$(document).on("click",async function(z){try{if(z.target.tagName==="IMG"){let E=await $(z.target)[0].id;if(!E)return;let J=JSON.stringify({fruit:E});Z(J)}}catch(E){console.warn(E)}});function _(z){try{z.forEach((E,J)=>{let K=`#row-${J+1}`;if(parseFloat($(K).find("td").eq(0).text())<E.score)gsap.to(K,{scale:0,duration:0.5,onComplete:()=>{$(K).replaceWith(`
                <tr id="row-${J+1}">
                  <th scope="row">${J+1}</th>
                  <td>${E.username}</td>
                  <td>${E.score}</td>
                </tr>
              `),gsap.fromTo(`#row-${J+1}`,{scale:0},{scale:1,duration:0.5})}})})}catch(E){console.error("Updating scoreboard failed",E)}}function F(z){try{let E=[...z].flat();while(E.length<10)E.push({score:0,username:"---"});E.forEach((J,K)=>{$(`#row-${K+1}`).append(`
          <th scope="row">${K+1}</th>
          <td>${J.username}</td>
          <td>${J.score}</td>`)})}catch(E){console.error("updating scoreboard failed",E)}}function I(z){return $("#movesLeft").val(z)}});
